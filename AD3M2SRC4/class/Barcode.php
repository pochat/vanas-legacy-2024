<?phprequire_once PATH_ADM_VENDOR . '/autoload.php';//use Philo\Blade\Blade;class Barcode {    public $qrOptions = array(        'width' => 3,        'height' => 3,        'color' => array(0, 0, 0)    );    public function qrSave($content = 'Eddin', $nameFile = 'qrBarcode', $pathBarcode = PATH_ADM_MEDIA, $options = array()) {//        Dbg::data($options);        if (!empty($options)) {            $this->qrOptions = $options + $this->qrOptions;        }        $this->qrOptions['color'] = array(0, 112, 185);        $barcodeObj = new TCPDF2DBarcode($content, 'QRCODE,H');// output the barcode as PNG image        $my_img = $barcodeObj->getBarcodePngData($this->qrOptions['width'], $this->qrOptions['height'], $this->qrOptions['color']);//return 12;//        $file = $pathBarcode . DS . $nameFile . ".png";//        var_dump($my_img);//            die;//        imagepng($my_img, $file);////        chmod($file, 0777);////        imagepng($my_img);//        imagedestroy($my_img);        echo '<p><img src="data:image/png;base64,' . base64_encode($my_img) . '" alt="image 1"/></p>';        die;        return $file;    }    public function getQRPNGData($content = 'Eddin', $options = array()) {        if (!empty($options)) {            $this->qrOptions = $options + $this->qrOptions;        }        $barcodeObj = new TCPDF2DBarcode($content, 'QRCODE,H');        return $barcodeObj->getBarcodePngData($this->qrOptions['width'], $this->qrOptions['height'], $this->qrOptions['color']);    }}