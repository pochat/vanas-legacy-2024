name: deploy-legacyPHP-to-ec2

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    name: Deploy Legacy Project PHP to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_EC2_IAM_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_EC2_IAM_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_EC2_REGION_NAME }}
      - name: Get GitHub Actions IP
        id: ip
        uses: haythem/public-ip@v1.2
      - name: Add GitHub Actions IP to Security Group
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id ${{ secrets.AWS_EC2_SECURITY_GROUP_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32

      - name: Upload modified files to EC2 with rsync
        env:
          REMOTE_USER: ${{ secrets.AWS_USER }}
          REMOTE_HOST: "15.223.141.201"
          REMOTE_PORT: ${{ secrets.AWS_PORT }}
          TARGET: ${{ secrets.AWS_TARGET_FOLDER }}
          SSH_PRIVATE_KEY: ${{ secrets.AWS_PEM_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" | ssh-agent bash -c 'ssh-add - && rsync -avz --no-perms --exclude-from=".gitignore" -e "ssh -o StrictHostKeyChecking=no -p $REMOTE_PORT" ./ $REMOTE_USER@$REMOTE_HOST:$TARGET --rsync-path="sudo -n rsync"'
      - name: Change ownership of the folder to user
        env:
          REMOTE_USER: ${{ secrets.AWS_USER }}
          REMOTE_HOST: "15.223.141.201"
          REMOTE_PORT: ${{ secrets.AWS_PORT }}
          TARGET: ${{ secrets.AWS_TARGET_FOLDER }}
          SSH_PRIVATE_KEY: ${{ secrets.AWS_PEM_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" | ssh-agent bash -c 'ssh-add - && ssh -o StrictHostKeyChecking=no -p $REMOTE_PORT $REMOTE_USER@$REMOTE_HOST "sudo chown -R $REMOTE_USER:$REMOTE_USER $TARGET"'

      - name: Remove GitHub Actions IP from Security Group
        if: always()
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id ${{ secrets.AWS_EC2_SECURITY_GROUP_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32
